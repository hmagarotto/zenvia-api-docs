openapi: 3.0.0
info:
  version: 1.0.0
  title: Zenvia API
  termsOfService: 'https://zenvia.com/'
  contact:
    email: contact@zenvia.com
    url: 'http://zenvia.com/contact'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://apis.guru/openapi-template/logo.png'
  description: |
    This is an **example** API to demonstrate features of OpenAPI specification
    # Introduction
    This specification is intended to to be a good starting point for describing Zenvia API in 
    [OpenAPI/Swagger format](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md).
x-tagGroups:
  - name: Chatbots
    tags:
      - Chatbots
      - Dispatches
  - name: Credentials
    tags:
      - Credentials
  - name: Messaging
    tags:
      - SMS
      - WhatsApp
      - Facebook
  - name: Reports
    tags:
      - Consumption
      - Engagement
servers:
  - url: 'http://api.zenvia.com/api/v1'
  - url: 'https://api.zenvia.com/api/v1'
security:
  - jwt: []
paths:
  /channels/facebook/messages:
    post:
      tags:
        - Facebook
      description: Send a Facebook message
      responses:
        '200':
          description: Facebook message model
  /channels/sms/messages:
    post:
      tags:
        - SMS
      description: Send a SMS message
      responses:
        '200':
          description: SMS message model
  /channels/whatsapp/messages:
    post:
      tags:
        - WhatsApp
      description: Send a WhatsApp message
      responses:
        '200':
          description: Whatsapp message model
  /chatbots:
    get:
      tags:
        - Chatbots
      description: List all chatbots
      responses:
        '200':
          description: Chatbot model
    post:
      tags:
        - Chatbots
      description: Create a new chatbot
      responses:
        '200':
          description: Chatbot model
  '/chatbots/{chatbotId}':
    get:
      tags:
        - Chatbots
      description: Get specific chatbot
      parameters:
        - name: chatbotId
          in: path
          required: true
          description: 'the chatbot identifier, as chatbotId'
          schema:
            type: string
      responses:
        '200':
          description: Chatbot model
  '/chatbots/{chatbotId}/dispatches':
    post:
      tags:
        - Dispatches
      description: Create a bulk or single dispatch
      parameters:
        - name: chatbotId
          in: path
          required: true
          description: 'the chatbot identifier, as chatbotId'
          schema:
            type: string
      responses:
        '200':
          description: Dispatch information model
components:
  schemas: {}
  headers: {}
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
